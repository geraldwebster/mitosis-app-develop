// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Qoot Todo 1`] = `
Object {
  "files": Array [
    Object {
      "contents": "import { injectMethod, QRL, jsxFactory } from \\"qoot\\";
import { TodoComponent } from \\"./component.js\\";

import { TodosState as todosState } from \\"../TodosState/public.js\\";

export default injectMethod(TodoComponent, function (this: TodoComponent) {
  return (
    <li
      class={\`\${props.todo.completed ? \\"completed\\" : \\"\\"} \${
        state.editing ? \\"editing\\" : \\"\\"
      }\`}
    >
      <div class=\\"view\\">
        <input
          class=\\"toggle\\"
          type=\\"checkbox\\"
          checked={props.todo.completed}
          $={{ \\"on:click\\": QRL\`ui:/Todo/onInputClick?event=.\` }}
        />

        <label $={{ \\"on:dblclick\\": QRL\`ui:/Todo/onLabelDblClick?event=.\` }}>
          {this.todo.text}
        </label>

        <button
          class=\\"destroy\\"
          $={{ \\"on:click\\": QRL\`ui:/Todo/onButtonClick?event=.\` }}
        ></button>
      </div>

      {this.editing ? (
        <>
          <input
            class=\\"edit\\"
            value={props.todo.text}
            $={{
              \\"on:blur\\": QRL\`ui:/Todo/onInput2Blur?event=.\`,
              \\"on:keyup\\": QRL\`ui:/Todo/onInput2KeyUp?event=.\`,
            }}
          />
        </>
      ) : undefined}
    </li>
  );
});
",
      "path": "Todo/template.tsx",
    },
    Object {
      "contents": "import { jsxDeclareComponent, QRL } from \\"qoot\\";

export const Todo = jsxDeclareComponent(\\"todo\\", QRL\`ui:/Todo/template\`);
",
      "path": "Todo/public.ts",
    },
    Object {
      "contents": "import { Component, QRL } from \\"qoot\\";

export class TodoComponent extends Component<any, any> {
  static $templateQRL = \\"ui:/Todo/template\\";

  editing = false;
  toggle() {
    this.todo.completed = !this.todo.completed;
  }

  $newState() {
    return {}; // TODO
  }
}
",
      "path": "Todo/component.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideQrlExp, markDirty } from \\"qoot\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideQrlExp<Event>(\\"event\\"),
  async function (this: TodoComponent, event: Event) {
    this.toggle();
  }
);
",
      "path": "Todo/onInputClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideQrlExp, markDirty } from \\"qoot\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideQrlExp<Event>(\\"event\\"),
  async function (this: TodoComponent, event: Event) {
    this.editing = true;
    markDirty(this);
  }
);
",
      "path": "Todo/onLabelDblClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideQrlExp, markDirty } from \\"qoot\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideQrlExp<Event>(\\"event\\"),
  async function (this: TodoComponent, event: Event) {
    todosState.todos.splice(todosState.todos.indexOf(this.todo));
  }
);
",
      "path": "Todo/onButtonClick.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideQrlExp, markDirty } from \\"qoot\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideQrlExp<Event>(\\"event\\"),
  async function (this: TodoComponent, event: Event) {
    this.editing = false;
    markDirty(this);
  }
);
",
      "path": "Todo/onInput2Blur.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideQrlExp, markDirty } from \\"qoot\\";
import { TodoComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodoComponent,
  provideQrlExp<Event>(\\"event\\"),
  async function (this: TodoComponent, event: Event) {
    this.todo.text = event.target.value;
  }
);
",
      "path": "Todo/onInput2KeyUp.ts",
    },
  ],
}
`;

exports[`Qoot Todos 1`] = `
Object {
  "files": Array [
    Object {
      "contents": "import { injectMethod, QRL, jsxFactory } from \\"qoot\\";
import { TodosComponent } from \\"./component.js\\";

import { TodosState as todosState } from \\"../TodosState/public.js\\";
import { Todo } from \\"../Todo/public.js\\";

export default injectMethod(TodosComponent, function (this: TodosComponent) {
  return (
    <section class=\\"main\\">
      {todosState.todos.length ? (
        <>
          <input
            class=\\"toggle-all\\"
            type=\\"checkbox\\"
            checked={todosState.allCompleted}
            $={{ \\"on:click\\": QRL\`ui:/Todos/onInputClick?event=.\` }}
          />
        </>
      ) : undefined}

      <ul class=\\"todo-list\\">
        {todosState.todos.map((todo) => (
          <>
            <Todo todo={todo}></Todo>
          </>
        ))}
      </ul>
    </section>
  );
});
",
      "path": "Todos/template.tsx",
    },
    Object {
      "contents": "import { jsxDeclareComponent, QRL } from \\"qoot\\";

export const Todos = jsxDeclareComponent(\\"todos\\", QRL\`ui:/Todos/template\`);
",
      "path": "Todos/public.ts",
    },
    Object {
      "contents": "import { Component, QRL } from \\"qoot\\";

export class TodosComponent extends Component<any, any> {
  static $templateQRL = \\"ui:/Todos/template\\";

  $newState() {
    return {}; // TODO
  }
}
",
      "path": "Todos/component.ts",
    },
    Object {
      "contents": "import { injectEventHandler, provideQrlExp, markDirty } from \\"qoot\\";
import { TodosComponent } from \\"./component.js\\";

export default injectEventHandler(
  TodosComponent,
  provideQrlExp<Event>(\\"event\\"),
  async function (this: TodosComponent, event: Event) {
    const newValue = !todosState.allCompleted;

    for (const todoItem of todosState.todos) {
      todoItem.completed = newValue;
    }
  }
);
",
      "path": "Todos/onInputClick.ts",
    },
  ],
}
`;
